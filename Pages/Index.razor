@page "/"
@inject HttpClient Http
@inject IRepository repository;

<hr>
<CascadingValue Name="appState" Value="@appState">
    <NewTasks tasks="@tasks" Title="Assignments" />
</CascadingValue>
<hr>

@code {
    private State appState = new State();
    private List<Assignment>? tasks = new List<Assignment>();
    @* LifeCycle Method *@
    protected override async Task OnInitializedAsync()
    {
        Console.WriteLine("App state in cascading branch at start:\n" + appState);
        appState.IsLoading = true;
        try
        {
            tasks = await Http.GetFromJsonAsync<List<Assignment>>("data/tasks.json");
            @* tasks = await repository.GetTasksFromJson(); *@
            Console.WriteLine("tasks were fetched");

        }
        catch (Exception e)
        {
            Console.WriteLine(e.Message);
            appState.HasError = true;
        }
        appState.IsLoading = false;

    }
}
